; ++ ProjectMF 2.0 AstMF MF_ONLY_V ++
; - MF Register by Dylan Cruz
; - MF Sender by Naveen Albert and Brian Clancy
; - Thanks to Phiber Optic and Donald Froula for support and inspiration.
; - DSP by Asterisk
; - NPSTN.US 2020

[mfmain] ; ARG1=SenderOPT ARG2=FamOPT ARG3=SenderNumber
exten => s,1,Progress
	; Trunk Drop Prep
        same => n,Set(CHANNEL(hangup_handler_push)=trunk_drop,s,1)
	; Set Argument Variables
	same => n,Set(sender_opt=${ARG1})
	same => n,Set(fam_opt=${ARG2})
	same => n,Set(sender_digits=${ARG3})
	; Trunk Prep MF_RECV_FULL
	same => n,System(echo Channel: Local/${UNIQUEID}@trunk_access >> /tmp/cf.tmp)
        same => n,System(echo Context: mfrecv_full >> /tmp/cf.tmp)
        same => n,System(echo Extension: ${UNIQUEID} >> /tmp/cf.tmp)
        same => n,System(echo Priority: 1 >> /tmp/cf.tmp)
        same => n,System(echo CallerID: "RECV <1>" >> /tmp/cf.tmp)
        same => n,System(mv /tmp/cf.tmp /var/spool/asterisk/outgoing/)
	; Trunk Prep MF_RECV_ST DROPOUT DETECT
        same => n,System(echo Channel: Local/${UNIQUEID}@trunk_access >> /tmp/cf.tmp)
        same => n,System(echo Context: mfrecv_st >> /tmp/cf.tmp)
        same => n,System(echo Extension: ${UNIQUEID} >> /tmp/cf.tmp)
        same => n,System(echo Priority: 1 >> /tmp/cf.tmp)
        same => n,System(echo CallerID: "RECV <2>" >> /tmp/cf.tmp)
        same => n,System(mv /tmp/cf.tmp /var/spool/asterisk/outgoing/)
	; Trunk Wait
	same => n,Wait(0.2)
	; Forward Audio Mute
        same => n,System(echo sleep 0.2 >> /tmp/fam_${UNIQUEID}.sh)
        same => n,System(echo 'asterisk -rx "confbridge mute ${UNIQUEID} ${CHANNEL}"' >> /tmp/fam_${UNIQUEID}.sh)
	same => n,System(echo sleep 6 >> /tmp/fam_${UNIQUEID}.sh)
	same => n,System(echo 'asterisk -rx "confbridge unmute ${UNIQUEID} ${CHANNEL}"' >> /tmp/fam_${UNIQUEID}.sh)
	; FAM Eval Start
	same => n,GotoIf($[${fam_opt}=0]?fam:sender)
	; FAM Eval End
        same => n(fam),NoOp(AstMF FAM Execute)
	same => n,System(chmod a+x /tmp/fam_${UNIQUEID}.sh)
	same => n,System(/tmp/fam_${UNIQUEID}.sh &)
	same => n,System(rm -rf /tmp/fam_${UNIQUEID}.sh)
	; Sender Eval Start
	same => n(sender),GotoIf($[${sender_opt}=0]?sender_exec:trunk_connect)
	; MF Sender
	same => n(sender_exec),NoOp(AstMF Sender Start)
        same => n,System(echo Channel: Local/${UNIQUEID}@trunk_access >> /tmp/cf.tmp)
        same => n,System(echo Context: sender >> /tmp/cf.tmp)
        same => n,System(echo Extension: ${sender_digits} >> /tmp/cf.tmp)
        same => n,System(echo Priority: 1 >> /tmp/cf.tmp)
        same => n,System(echo CallerID: "MF_SENDER <3>" >> /tmp/cf.tmp)
        same => n,System(mv /tmp/cf.tmp /var/spool/asterisk/outgoing/)
	; Monitor Trunk
	same => n(trunk_connect),NoOp(AstMF Trunk Connect)
	same => n,Confbridge(${UNIQUEID},mf_bridge,mf_user)
	; Call Connection
	same => n,Set(number=${GLOBAL(${UNIQUEID}_decode)})
	same => n,GoTo(main,${number},1)
	same => n,Hangup

[trunk_drop]
exten => s,1,NoOp(TRUNK RESET)
	same => n,System(/usr/sbin/asterisk -rx "confbridge kick ${UNIQUEID} all")
        same => n,System(rm -rf /tmp/${UNIQUEID}-st.wav)
        same => n,System(rm -rf /tmp/${UNIQUEID}-full.wav)
	
[trunk_access]
exten => _X.,1,Answer ; ANSWER internal trunk
	same => n,Confbridge(${EXTEN},mf_bridge,mf_user)
	same => n,Hangup


[mfrecv_full]
exten => _X.,1,Answer ; ANSWER internal trunk
	same => n,MixMonitor(/tmp/${EXTEN}-full.wav)
	same => n(loop),NoOp(START DROPOUT SCAN)
	same => n,Wait(0.5) ; 0.5s
	same => n,Set(SIGD=${ENV(${EXTEN}_SIGD)})
	same => n,GotoIf($["${SIGD}" = "true"]?dropout:loop)
	same => n,Hangup
	same => n(dropout),NoOp(START DROPOUT DETECTED)
	same => n,StopMixMonitor
	same => n,Set(register_output=${SHELL(/etc/asterisk/detect/mf2 /tmp/${EXTEN}-full.wav)})
	same => n,Set(GLOBAL(${EXTEN}_decode)=${register_output})
	same => n,System(/usr/sbin/asterisk -rx "confbridge kick ${EXTEN} all") ; WARNING this will disconnect all listeners.
	same => n,Hangup

[mfrecv_st]
exten => _X.,1,Answer ; ANSWER internal trunk
        same => n,Set(ENV(${EXTEN}_SIGD)=false) ; SIG is not DONE
        same => n(loop),NoOp(START ST SCAN)
        same => n,MixMonitor(/tmp/${EXTEN}-st.wav)
        same => n,Wait(2.0) ; ST Tone scanning. You may need to experiment with this value. 2 seconds works fine in my testing.
        same => n,StopMixMonitor
        same => n,Set(register_output=${SHELL(/etc/asterisk/detect/mf /tmp/${EXTEN}-st.wav)})
        same => n,Set(GLOBAL(${EXTEN}_decode_st)=${register_output})
        same => n,Set(ST=#) ; ST Tone
        same => n,ExecIf($[${REGEX("${ST}" ${register_output})} = 1]?GoTo(dropout):GoTo(loop))
        same => n,NoOp(DECODE FRAME = RAW: ${register_output} | ST_COMP: ${dropout_eval})
        same => n,GotoIf($["${dropout_eval}" = "true"]?dropout:loop)
        same => n,Hangup
        same => n(dropout),NoOP(START PULSE DETECTED)
        same => n,Set(ENV(${EXTEN}_SIGD)=true) ; SIG is DONE (MON DROPOUT)
        same => n,Hangup

[sender]
exten => _X.,1,Answer ; ANSWER internal trunk
	same => n,GoSub(mfer,start,1(${EXTEN}))
	same => n,Hangup

[mfer] ; NPSTN 20181212 NA/BJC
exten => start,1,Set(number=${ARG1}) ; ARG1 = digits to MF
        same => n,Set(c=0)
        same => n,Set(numdigits=${LEN(${ARG1})})
        same => n,Set(tonestring=${MFX}${DIGITSEP}${MFKP}${DIGITSEP})
        same => n,While($[${c}<${numdigits}])
        same => n,Set(MFnext=${MF${number:${c}:1}})
        same => n,Set(tonestring=${tonestring}${MFnext}${DIGITSEP})
        same => n,Set(c=${INC(c)})
        same => n,EndWhile
        same => n,Set(MFnext=${MFST})
        same => n,Set(tonestring=${tonestring}${MFnext}${DIGITSEP})
        same => n,Set(tonestring=${tonestring}${MFX})
        same => n,Set(toneduration=$[100*${LEN(${ARG1})}+1785])
        same => n,Playtones(${FILTER(0-9\x21/|+,${tonestring})})
        same => n,Wait($[${toneduration}/1000])
        same => n,StopPlaytones()
        same => n,Return

[globals]
MFX = "!0/500" ; silence
MF1 = "!700+900/50|!0/50"
MF2 = "!700+1100/50|!0/50"
MF3 = "!900+1100/50|!0/50"
MF4 = "!700+1300/50|!0/50"
MF5 = "!900+1300/50|!0/50"
MF6 = "!1100+1300/50|!0/50"
MF7 = "!700+1500/50|!0/50"
MF8 = "!900+1500/50|!0/50"
MF9 = "!1100+1500/50|!0/50"
MF0 = "!1300+1500/50|!0/50"
MFKP = "!1100+1700/100|!0/50"
MFST = "!1500+1700/35|!0/50"
DIGITSEP = "|"
